package scheduleDTO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.hr.cmn.ConnectionMaker;
import com.hr.cmn.DTO;
import com.hr.cmn.JDBCResClose;
import com.hr.cmn.WorkDiv;

public class ScheduleDAO extends WorkDiv {
	private ConnectionMaker connectionMaker;

	public ScheduleDAO() {
		connectionMaker = new ConnectionMaker();
	}

	@Override
	public DTO doSelectOne(DTO dto) {
//		CityVO inVO = (CityVO) dto;
//		CityVO outVO = new CityVO();
//
//		Connection connection = null;
//		PreparedStatement pstmt = null;
//		ResultSet rs = null;
//
//		StringBuilder sb = new StringBuilder();
//
//		try {
//			// 1. Connection
//			connection = connectionMaker.getConnection();
//			System.out.println("1.Connection=" + connection);
//
//			// 2. Query
//			sb.append("SELECT C_ENG   	  ");
//			sb.append("		,C_KOR        ");
//			sb.append("		,C_CONTINENT  ");
//			sb.append("		,C_PRICE      ");
//			sb.append("		,C_MILEAGE    ");
//			sb.append("		,C_STIME      ");
//			sb.append("FROM CITY          ");
//			sb.append("WHERE C_KOR = ?    ");
//
//			System.out.println("2.Query=" + sb.toString());
//			pstmt = connection.prepareStatement(sb.toString());
//
//			// 3.param
//			System.out.println("3.param=\n" + inVO);
//
//			pstmt.setString(1, inVO.getcKor());
//
//			// 4. Query 수행
//			rs = pstmt.executeQuery();
//			if (rs.next()) {
//				outVO.setcEng(rs.getString("C_ENG"));
//				outVO.setcKor(rs.getString("C_KOR"));
//				outVO.setcContinent(rs.getString("C_CONTINENT"));
//				outVO.setcPrice(rs.getInt("C_PRICE"));
//				outVO.setcMileage(rs.getInt("C_MILEAGE"));
//				outVO.setcStime(rs.getString("C_STIME"));
//
//				System.out.println("5.outVO=\n" + outVO);
//			}
//		} catch (Exception e) {
//			System.out.println("===================");
//			System.out.println("=SQLException=" + e.getMessage());
//			System.out.println("===================");
//			e.printStackTrace();
//		} finally {
//			JDBCResClose.close(rs);
//			JDBCResClose.close(pstmt);
//			JDBCResClose.close(connection);
//		}
//		return outVO;
		return null;
	}

	@Override
	public int doUpdate(DTO dto) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int doDelete(DTO dto) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int doInsert(DTO dto) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public List<?> doRetrive(DTO dto) {
		ScheduleVO inVO = (ScheduleVO) dto;
		List<ScheduleVO> outList = new ArrayList<ScheduleVO>();

		Connection connection = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

		StringBuilder sb = new StringBuilder(); // 검색 query

		// main query
		sb.append("SELECT TO_CHAR(E_DATE,'YYYY/MM/DD') \"E_DATE\",						");
		sb.append("		D_TIME,															");
		sb.append("		DEPART_CITY,  													");
		sb.append("		ARRIVE_CITY,  													");
		sb.append("		TO_CHAR(PRICE,'999,999') \"PRICE\",								");
		sb.append("		MILEAGE,														");
		sb.append("		SC_CODE 														");
		sb.append("FROM SCHEDULE      													");
		sb.append("WHERE TO_CHAR(E_DATE,'YYYY-MM-DD') = ?								");
		sb.append("AND DEPART_CITY = (SELECT CENG_NAME FROM CITY WHERE CKOR_NAME = ? )  ");
		sb.append("AND ARRIVE_CITY = (SELECT CENG_NAME FROM CITY WHERE CKOR_NAME = ? )	");

		try {
			// 1. connection
			connection = connectionMaker.getConnection();
			System.out.println("1.connection=" + connection);

			// 2.query
			System.out.println("2.Query=" + sb.toString());
			pstmt = connection.prepareStatement(sb.toString());

			// 3.param
			System.out.println("3.param=\n" + inVO);

			pstmt.setString(1, inVO.geteDate());
			pstmt.setString(2, inVO.getDepartCity());
			pstmt.setString(3, inVO.getArriveCity());

			// 4.query수행
			rs = pstmt.executeQuery();
			while (rs.next()) {
				// Data 1건을 outVO담기.
				ScheduleVO outVO = new ScheduleVO();

				outVO.seteDate(rs.getString("E_DATE"));
				outVO.setdTime(rs.getString("D_TIME"));
				outVO.setDepartCity(rs.getString("DEPART_CITY"));
				outVO.setArriveCity(rs.getString("ARRIVE_CITY"));
				outVO.setPrice(rs.getString("PRICE"));
				outVO.setMileage(rs.getInt("MILEAGE"));
				outVO.setScCode(rs.getString("SC_CODE"));
				
				outList.add(outVO);
			}
			System.out.println("4 return :" + outList);

		} catch (Exception e) {
			System.out.println("===================");
			System.out.println("=SQLException=" + e.getMessage());
			System.out.println("===================");
			e.printStackTrace();
		} finally {
			JDBCResClose.close(rs);
			JDBCResClose.close(pstmt);
			JDBCResClose.close(connection);
		}
		return outList;
	}
	
	
	public int doUpdateSeat(DTO dto) {
	      int flag=0;
	      ScheduleDTO inVO=(ScheduleDTO)dto;
	      LOG.debug("OccupiedVO: "+inVO);
	      
	      StringBuilder sb=new StringBuilder();
	      Connection conn=null;
	      PreparedStatement ppst=null;
	      try {
	         conn=connectionMaker.getConnection();
	         sb.append("UPDATE f_schedule               ");
	         sb.append("SET                                  ");
	         sb.append("    sc_unoccupied =sc_unoccupied-1   ");
	         sb.append("WHERE                                ");
	         sb.append("    sc_code = ?                     ");
	         
	         ppst=conn.prepareStatement(sb.toString());
	         ppst.setString(1, inVO.getScCode());
	         
	         flag=ppst.executeUpdate();
	         
	      }catch(SQLException e) {
	         LOG.debug("=========================");
	         LOG.debug("SQLException: "+e.getMessage());
	         LOG.debug("=========================");
	      }finally {
	         try {
	            if(ppst != null) ppst.close();
	            if(conn != null) conn.close();
	         } catch (SQLException e) {
	            // TODO Auto-generated catch block
	            e.printStackTrace();
	         }
	      }//finally
	      
	      return flag;
	   }

}
